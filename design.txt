Lab 1: Count

Issue: binary vs text file format
Solution: I'm unsure tbh. 

Issue: Buffer size vs Search String Size
Solution: Buffer Size = 2x Search String, max search string = 20char, so at most 40 bytes.  Read in lenSS chars at a time.

Issue: Hidden Strings  
Solution: Got back to start of string, and move forward one

Issue: Matches across reads
Solution: Read a second buffer in, maybe use a rotating buffer for input as well. 

Issue: How to tell when you need to read in new buffer? 
Solution: A variable indicating which half of the buffer is the first half. 
Command Line Usage: 
count $input-filename $search-string $output-file

General Format:
Init Variables - totalLen, buffer, search-string, match, ssLoc, FILE pointer
Read in file
while not EOF
    Read in buffer
    for char in buffer 
        compare with search-string
        if match
            store match location
            increment ssLoc
        else 
            next char
            ssLoc = 0
        
Ex.
SS = tttt
String = tttasdtttttt
Buf 1 = tttasdtt
Pos = 0 ttta = False #Could we jump to the where it differed? Yes
Pos = 4 s = False
Pos = 5 d = false
Pos = 6 tt End of buffer
Buf 2 = tttasdtttttt
Pos = 6 tttt True
Pos = 7 tttt True 
Pos = 8 tttt True
Pos = 9 ttt Try to read buffer, EOF done. 
Count = 3 
Size = 8 + 6 (Returns from fread)
